/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package General;

import com.sun.glass.events.KeyEvent;
import java.sql.*;
import java.sql.DriverManager;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


/**
 *
 * @author GAMER
 */
public class SignUp extends javax.swing.JFrame {

    /**
     * Creates new form SignUp
     */
    public SignUp() {
        initComponents();
    setIconImage(new ImageIcon(getClass().getResource("/General/logo2.jpg")).getImage());
    clock1();
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clock = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        SignUp = new javax.swing.JButton();
        TF2 = new javax.swing.JTextField();
        TF1 = new javax.swing.JTextField();
        TF3 = new javax.swing.JPasswordField();
        TF4 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(936, 514));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clock.setFont(new java.awt.Font("DS-Digital", 0, 50)); // NOI18N
        clock.setForeground(new java.awt.Color(0, 165, 255));
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 20, 340, 60));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 330, 60));

        SignUp.setContentAreaFilled(false);
        SignUp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpActionPerformed(evt);
            }
        });
        getContentPane().add(SignUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, 260, 70));

        TF2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        TF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF2ActionPerformed(evt);
            }
        });
        TF2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TF2KeyTyped(evt);
            }
        });
        getContentPane().add(TF2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 280, 40));

        TF1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        TF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF1ActionPerformed(evt);
            }
        });
        TF1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TF1KeyTyped(evt);
            }
        });
        getContentPane().add(TF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 200, 280, 40));

        TF3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        TF3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TF3KeyTyped(evt);
            }
        });
        getContentPane().add(TF3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, 280, 40));

        TF4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        TF4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TF4KeyTyped(evt);
            }
        });
        getContentPane().add(TF4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 350, 280, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sign up.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF2ActionPerformed
    
    }//GEN-LAST:event_TF2ActionPerformed

    private void TF2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF2KeyTyped
    char c = evt.getKeyChar();
 if(!(Character.isDigit(c)|| c== KeyEvent.VK_BACKSPACE)){
 evt.consume();
 getToolkit().beep();
 }
 String mobileNum = TF2.getText();
 if(mobileNum.length()>10){
 evt.consume();
  getToolkit().beep();
 }
    }//GEN-LAST:event_TF2KeyTyped

    private void SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpActionPerformed
 String currentDir = System.getProperty("user.dir");
String username=TF1.getText();
String mobileNo =TF2.getText();
String password =TF3.getText();
String password1 = TF4.getText();
if (password.equals(password1)&& username.length()!=0 && mobileNo.length()!=0 && password.length()!=0 ){
try
{
    Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
    String UID="root";
       String PWD="8242";
       String DB_URL = "jdbc:derby:" + currentDir + "\\revlot";
      Connection conn = DriverManager.getConnection(DB_URL,UID,PWD); 
      Statement st= conn.createStatement();
   String query="INSERT INTO ROOT.USERS VALUES('"+username+"','"+password+"','"+mobileNo+"')";
   st.executeUpdate(query);
   TF1.setText("") ;
   TF2.setText("");
   TF3.setText("");
   TF4.setText("");
 JOptionPane.showMessageDialog(null,"Your account has been created");  
 }
catch(Exception e)
{
 JOptionPane.showMessageDialog(null,e.getMessage());
}       
}
else{ JOptionPane.showMessageDialog(null,"Please Confirm password!!   Both passwords don't match");  }
this.setVisible(true);
LogIn frm1 = new LogIn();
frm1.setVisible(true);
    }//GEN-LAST:event_SignUpActionPerformed

    private void TF3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF3KeyTyped
String  password= TF3.getText();
 if(password.length()>15){
 evt.consume();  
 getToolkit().beep();
 }
    }//GEN-LAST:event_TF3KeyTyped

    private void TF4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF4KeyTyped
 String  password1= TF4.getText();
 if(password1.length()>15){
 evt.consume();
  getToolkit().beep();
 }
    }//GEN-LAST:event_TF4KeyTyped

    private void TF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF1ActionPerformed

    private void TF1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF1KeyTyped
 String  name= TF1.getText();
 if(name.length()>15){
 evt.consume();
 getToolkit().beep();
 }
    }//GEN-LAST:event_TF1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SignUp;
    private javax.swing.JTextField TF1;
    private javax.swing.JTextField TF2;
    private javax.swing.JPasswordField TF3;
    private javax.swing.JPasswordField TF4;
    private javax.swing.JLabel clock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

public void clock1(){
   new Thread()
        {
            public void run()
            {
            while(true)
            {
              Calendar call = new GregorianCalendar();
              DecimalFormat fmt = new DecimalFormat("00");
              
              int hour =call.get(Calendar.HOUR);
              int min =call.get(Calendar.MINUTE);
              int sec =call.get(Calendar.SECOND);
              int Am_Pm =call.get(Calendar.AM_PM);
              String A_P="";
              if(Am_Pm == 1){
             A_P ="PM";
              }
              else{
              A_P ="AM";
              }
              String time =fmt.format(hour)+":"+fmt.format(min)+":"+fmt.format(sec)+" "+A_P;
              
              clock.setText(time);
            }    
            
            }
        }.start();
   
   }






}
