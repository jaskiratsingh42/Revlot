/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package General;

import com.sun.glass.events.KeyEvent;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JTextField;

/**
 *
 * @author GAMER
 */
public class LogIn extends javax.swing.JFrame {
    /**
     * Creates new form SignUp
     */
    public LogIn() {
        initComponents();
     setIconImage(new ImageIcon(getClass().getResource("/General/logo2.jpg")).getImage());
     clock1();
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clock = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        login = new javax.swing.JButton();
        userTF = new javax.swing.JTextField();
        passTF = new javax.swing.JPasswordField();
        newMem = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(933, 539));
        setPreferredSize(new java.awt.Dimension(933, 560));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clock.setFont(new java.awt.Font("DS-Digital", 0, 50)); // NOI18N
        clock.setForeground(new java.awt.Color(0, 165, 255));
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 30, 310, 60));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 300, 60));

        login.setContentAreaFilled(false);
        login.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 410, 230, 60));

        userTF.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        userTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTFActionPerformed(evt);
            }
        });
        userTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userTFKeyTyped(evt);
            }
        });
        getContentPane().add(userTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 280, 40));

        passTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        passTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passTFKeyTyped(evt);
            }
        });
        getContentPane().add(passTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, 280, 40));

        newMem.setContentAreaFilled(false);
        newMem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newMem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMemActionPerformed(evt);
            }
        });
        getContentPane().add(newMem, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, 470, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 950, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 490));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
if(userTF.getText().length()==0)  // Checking for empty field
      JOptionPane.showMessageDialog(null, "Empty field!!   Please Enter Username");
   else if(passTF.getPassword().length==0)  // Checking for empty field
      JOptionPane.showMessageDialog(null, "Empty field!!   Please Enter Password");
   else{
       String user = userTF.getText();   // Collecting the input
       String pwd = passTF.getText();  
       
   if(validate_login(user,pwd)== true){
         
   this.setVisible(false);
   Choose frm1 = new Choose();
   frm1.setVisible(true);          }      
       
    else {
          JOptionPane.showMessageDialog(null,"Incorrect Username OR Password");
         }
    }//GEN-LAST:event_loginActionPerformed
    }
    private void newMemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMemActionPerformed
        this.setVisible(false);
        SignUp frm1 = new SignUp();
        frm1.setVisible(true);
    }//GEN-LAST:event_newMemActionPerformed

    private void userTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userTFKeyTyped
 String  name= userTF.getText();
 if(name.length()>15){
 evt.consume();
 getToolkit().beep();
 }
    }//GEN-LAST:event_userTFKeyTyped

    private void passTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passTFKeyTyped
String  name= passTF.getText();
 if(name.length()>15){
 evt.consume();
 getToolkit().beep();
 }
    }//GEN-LAST:event_passTFKeyTyped

    private void userTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try{
                    Thread.sleep(10500);
        }
         catch(Exception e)   {
        
        }
                new LogIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel clock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton login;
    private javax.swing.JButton newMem;
    private javax.swing.JPasswordField passTF;
    private javax.swing.JTextField userTF;
    // End of variables declaration//GEN-END:variables

    public boolean validate_login(String username, String password) {
    
        String currentDir = System.getProperty("user.dir");
        System.err.println(currentDir);
        try{           
       Class.forName("org.apache.derby.jdbc.EmbeddedDriver"); // MySQL database connection
       String UID="root";
       String PWD="8242";
       String DB_URL = "jdbc:derby:" + currentDir + "\\revlot";
       System.out.println(DB_URL);
      java.sql.Connection conn = DriverManager.getConnection(DB_URL,UID,PWD);    
       java.sql.PreparedStatement pst = conn.prepareStatement("Select * from ROOT.USERS where username=? and password=?");
       pst.setString(1, username); 
       pst.setString(2, password);
       java.sql.ResultSet rs = pst.executeQuery();                        
       if(rs.next())            
           return true;    
       else
           return false;            
   }
   catch(Exception e){
       e.printStackTrace();
       return false; }
    }
   public void clock1(){
   new Thread()
        {
            public void run()
            {
            while(true)
            {
              Calendar call = new GregorianCalendar();
              DecimalFormat fmt = new DecimalFormat("00");
              
              int hour =call.get(Calendar.HOUR);
              int min =call.get(Calendar.MINUTE);
              int sec =call.get(Calendar.SECOND);
              int Am_Pm =call.get(Calendar.AM_PM);
              String A_P="";
              if(Am_Pm == 1){
             A_P ="PM";
              }
              else{
              A_P ="AM";
              }
              String time =fmt.format(hour)+":"+fmt.format(min)+":"+fmt.format(sec)+" "+A_P;
              
              clock.setText(time);
            }    
            
            }
        }.start();
   
   }
   
   
}
